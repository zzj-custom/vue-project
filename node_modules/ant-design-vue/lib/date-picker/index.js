"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vcCalendar = _interopRequireDefault(require("../vc-calendar"));

var _MonthCalendar = _interopRequireDefault(require("../vc-calendar/src/MonthCalendar"));

var _createPicker = _interopRequireDefault(require("./createPicker"));

var _wrapPicker = _interopRequireDefault(require("./wrapPicker"));

var _RangePicker = _interopRequireDefault(require("./RangePicker"));

var _WeekPicker = _interopRequireDefault(require("./WeekPicker"));

var _interface = require("./interface");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DatePicker = (0, _wrapPicker.default)(_objectSpread(_objectSpread({}, (0, _createPicker.default)(_vcCalendar.default, (0, _interface.DatePickerProps)())), {}, {
  name: 'ADatePicker'
}), (0, _interface.DatePickerProps)(), 'date');
var MonthPicker = (0, _wrapPicker.default)(_objectSpread(_objectSpread({}, (0, _createPicker.default)(_MonthCalendar.default, (0, _interface.MonthPickerProps)())), {}, {
  name: 'AMonthPicker'
}), (0, _interface.MonthPickerProps)(), 'month');

_extends(DatePicker, {
  RangePicker: (0, _wrapPicker.default)(_RangePicker.default, (0, _interface.RangePickerProps)(), 'date'),
  MonthPicker: MonthPicker,
  WeekPicker: (0, _wrapPicker.default)(_WeekPicker.default, (0, _interface.WeekPickerProps)(), 'week')
});
/* istanbul ignore next */


DatePicker.install = function (app) {
  app.component(DatePicker.name, DatePicker);
  app.component(DatePicker.RangePicker.name, DatePicker.RangePicker);
  app.component(DatePicker.MonthPicker.name, DatePicker.MonthPicker);
  app.component(DatePicker.WeekPicker.name, DatePicker.WeekPicker);
};

var _default = DatePicker;
exports.default = _default;