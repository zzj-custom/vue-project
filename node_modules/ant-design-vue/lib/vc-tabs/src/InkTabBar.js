"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = require("vue");

var _InkTabBarNode = _interopRequireDefault(require("./InkTabBarNode"));

var _TabBarTabsNode = _interopRequireDefault(require("./TabBarTabsNode"));

var _TabBarRootNode = _interopRequireDefault(require("./TabBarRootNode"));

var _SaveRef = _interopRequireDefault(require("./SaveRef"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function noop() {}

var InkTabBar = function InkTabBar(_, _ref) {
  var attrs = _ref.attrs;

  var _attrs$onTabClick = attrs.onTabClick,
      onTabClick = _attrs$onTabClick === void 0 ? noop : _attrs$onTabClick,
      props = _objectWithoutProperties(attrs, ["onTabClick"]);

  return (0, _vue.createVNode)(_SaveRef.default, {
    "children": function children(saveRef, getRef) {
      return (0, _vue.createVNode)(_TabBarRootNode.default, (0, _vue.mergeProps)({
        "saveRef": saveRef
      }, props), {
        default: function _default() {
          return [(0, _vue.createVNode)(_TabBarTabsNode.default, (0, _vue.mergeProps)({
            "onTabClick": onTabClick,
            "saveRef": saveRef
          }, props), null), (0, _vue.createVNode)(_InkTabBarNode.default, (0, _vue.mergeProps)({
            "saveRef": saveRef,
            "getRef": getRef
          }, props), null)];
        }
      });
    }
  }, null);
};

InkTabBar.inheritAttrs = false;
var _default2 = InkTabBar;
exports.default = _default2;