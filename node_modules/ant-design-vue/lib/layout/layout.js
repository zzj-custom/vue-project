"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BasicProps = void 0;

var _vue = require("vue");

var _vueTypes = _interopRequireDefault(require("../_util/vue-types"));

var _classNames2 = _interopRequireDefault(require("../_util/classNames"));

var _propsUtil = require("../_util/props-util");

var _configProvider = require("../config-provider");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var BasicProps = {
  prefixCls: _vueTypes.default.string,
  hasSider: _vueTypes.default.boolean,
  tagName: _vueTypes.default.string
};
exports.BasicProps = BasicProps;

function generator(_ref) {
  var suffixCls = _ref.suffixCls,
      tagName = _ref.tagName,
      name = _ref.name;
  return function (BasicComponent) {
    return {
      name: name,
      props: BasicComponent.props,
      setup: function setup() {
        return {
          configProvider: (0, _vue.inject)('configProvider', _configProvider.ConfigConsumerProps)
        };
      },
      render: function render() {
        var _this = this;

        var customizePrefixCls = this.$props.prefixCls;
        var getPrefixCls = this.configProvider.getPrefixCls;
        var prefixCls = getPrefixCls(suffixCls, customizePrefixCls);

        var basicComponentProps = _objectSpread(_objectSpread({
          prefixCls: prefixCls
        }, (0, _propsUtil.getOptionProps)(this)), {}, {
          tagName: tagName
        });

        return (0, _vue.createVNode)(BasicComponent, basicComponentProps, {
          default: function _default() {
            return [(0, _propsUtil.getSlot)(_this)];
          }
        });
      }
    };
  };
}

var Basic = {
  props: BasicProps,
  render: function render() {
    var _this2 = this;

    var prefixCls = this.prefixCls,
        Tag = this.tagName;
    var divProps = {
      class: prefixCls
    };
    return (0, _vue.createVNode)(Tag, divProps, {
      default: function _default() {
        return [(0, _propsUtil.getSlot)(_this2)];
      }
    });
  }
};
var BasicLayout = {
  props: BasicProps,
  data: function data() {
    return {
      siders: []
    };
  },
  created: function created() {
    var _this3 = this;

    (0, _vue.provide)('siderHook', {
      addSider: function addSider(id) {
        _this3.siders = [].concat(_toConsumableArray(_this3.siders), [id]);
      },
      removeSider: function removeSider(id) {
        _this3.siders = _this3.siders.filter(function (currentId) {
          return currentId !== id;
        });
      }
    });
  },
  render: function render() {
    var _this4 = this;

    var prefixCls = this.prefixCls,
        hasSider = this.hasSider,
        Tag = this.tagName;
    var divCls = (0, _classNames2.default)(prefixCls, _defineProperty({}, "".concat(prefixCls, "-has-sider"), typeof hasSider === 'boolean' ? hasSider : this.siders.length > 0));
    var divProps = {
      class: divCls
    };
    return (0, _vue.createVNode)(Tag, divProps, {
      default: function _default() {
        return [(0, _propsUtil.getSlot)(_this4)];
      }
    });
  }
};
var Layout = generator({
  suffixCls: 'layout',
  tagName: 'section',
  name: 'ALayout'
})(BasicLayout);
var Header = generator({
  suffixCls: 'layout-header',
  tagName: 'header',
  name: 'ALayoutHeader'
})(Basic);
var Footer = generator({
  suffixCls: 'layout-footer',
  tagName: 'footer',
  name: 'ALayoutFooter'
})(Basic);
var Content = generator({
  suffixCls: 'layout-content',
  tagName: 'main',
  name: 'ALayoutContent'
})(Basic);
Layout.Header = Header;
Layout.Footer = Footer;
Layout.Content = Content;
var _default2 = Layout;
exports.default = _default2;