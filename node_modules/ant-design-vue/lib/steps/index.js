"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = require("vue");

var _CloseOutlined = _interopRequireDefault(require("@ant-design/icons-vue/CloseOutlined"));

var _CheckOutlined = _interopRequireDefault(require("@ant-design/icons-vue/CheckOutlined"));

var _vueTypes = _interopRequireDefault(require("../_util/vue-types"));

var _propsUtil = require("../_util/props-util");

var _vcSteps = _interopRequireDefault(require("../vc-steps"));

var _configProvider = require("../config-provider");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var getStepsProps = function getStepsProps() {
  var defaultProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var props = {
    prefixCls: _vueTypes.default.string,
    iconPrefix: _vueTypes.default.string,
    current: _vueTypes.default.number,
    initial: _vueTypes.default.number,
    labelPlacement: _vueTypes.default.oneOf(['horizontal', 'vertical']).def('horizontal'),
    status: _vueTypes.default.oneOf(['wait', 'process', 'finish', 'error']),
    size: _vueTypes.default.oneOf(['default', 'small']),
    direction: _vueTypes.default.oneOf(['horizontal', 'vertical']),
    progressDot: _vueTypes.default.oneOfType([_vueTypes.default.bool, _vueTypes.default.func]),
    type: _vueTypes.default.oneOf(['default', 'navigation']),
    onChange: _vueTypes.default.func,
    'onUpdate:current': _vueTypes.default.func
  };
  return (0, _propsUtil.initDefaultProps)(props, defaultProps);
};

var Steps = {
  name: 'ASteps',
  inheritAttrs: false,
  props: getStepsProps({
    current: 0
  }),
  setup: function setup() {
    return {
      configProvider: (0, _vue.inject)('configProvider', _configProvider.ConfigConsumerProps)
    };
  },
  Step: _objectSpread(_objectSpread({}, _vcSteps.default.Step), {}, {
    name: 'AStep'
  }),
  methods: {
    handleChange: function handleChange(current) {
      this.$emit('update:current', current);
      this.$emit('change', current);
    }
  },
  render: function render() {
    var _this = this;

    var props = _objectSpread(_objectSpread({}, (0, _propsUtil.getOptionProps)(this)), this.$attrs);

    var customizePrefixCls = props.prefixCls,
        customizeIconPrefixCls = props.iconPrefix;
    var getPrefixCls = this.configProvider.getPrefixCls;
    var prefixCls = getPrefixCls('steps', customizePrefixCls);
    var iconPrefix = getPrefixCls('', customizeIconPrefixCls);
    var progressDot = (0, _propsUtil.getComponent)(this, 'progressDot', this, false);
    var icons = {
      finish: (0, _vue.createVNode)(_CheckOutlined.default, {
        "class": "".concat(prefixCls, "-finish-icon")
      }, null),
      error: (0, _vue.createVNode)(_CloseOutlined.default, {
        "class": "".concat(prefixCls, "-error-icon")
      }, null)
    };

    var stepsProps = _objectSpread(_objectSpread({
      icons: icons,
      iconPrefix: iconPrefix,
      prefixCls: prefixCls,
      progressDot: progressDot
    }, props), {}, {
      canClick: !!(this.onChange || this['onUpdate:current']),
      onChange: this.handleChange
    });

    return (0, _vue.createVNode)(_vcSteps.default, stepsProps, {
      default: function _default() {
        return [(0, _propsUtil.getSlot)(_this)];
      }
    });
  }
};
/* istanbul ignore next */

Steps.install = function (app) {
  app.component(Steps.name, Steps);
  app.component(Steps.Step.name, Steps.Step);
};

var _default2 = Steps;
exports.default = _default2;