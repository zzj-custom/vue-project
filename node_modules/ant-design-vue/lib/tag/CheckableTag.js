"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = require("vue");

var _vueTypes = _interopRequireDefault(require("../_util/vue-types"));

var _configProvider = require("../config-provider");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = {
  name: 'ACheckableTag',
  props: {
    prefixCls: _vueTypes.default.string,
    checked: _vueTypes.default.bool,
    onChange: _vueTypes.default.func,
    'onUpdate:checked': _vueTypes.default.func
  },
  setup: function setup() {
    return {
      configProvider: (0, _vue.inject)('configProvider', _configProvider.ConfigConsumerProps)
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      var checked = this.checked,
          customizePrefixCls = this.prefixCls;
      var getPrefixCls = this.configProvider.getPrefixCls;
      var prefixCls = getPrefixCls('tag', customizePrefixCls);
      return _ref = {}, _defineProperty(_ref, "".concat(prefixCls), true), _defineProperty(_ref, "".concat(prefixCls, "-checkable"), true), _defineProperty(_ref, "".concat(prefixCls, "-checkable-checked"), checked), _ref;
    }
  },
  methods: {
    handleClick: function handleClick() {
      var checked = this.checked;
      this.$emit('update:checked', !checked);
      this.$emit('change', !checked);
    }
  },
  render: function render() {
    var classes = this.classes,
        handleClick = this.handleClick,
        $slots = this.$slots;
    return (0, _vue.createVNode)("div", {
      "class": classes,
      "onClick": handleClick
    }, [$slots.default && $slots.default()]);
  }
};
exports.default = _default;