"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IDrawerChildProps = exports.IDrawerProps = void 0;

var _vueTypes = _interopRequireDefault(require("../../_util/vue-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var IProps = {
  width: _vueTypes.default.any,
  height: _vueTypes.default.any,
  defaultOpen: _vueTypes.default.bool,
  firstEnter: _vueTypes.default.bool,
  open: _vueTypes.default.bool,
  prefixCls: _vueTypes.default.string,
  placement: _vueTypes.default.string,
  level: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.array]),
  levelMove: _vueTypes.default.oneOfType([_vueTypes.default.number, _vueTypes.default.func, _vueTypes.default.array]),
  ease: _vueTypes.default.string,
  duration: _vueTypes.default.string,
  handler: _vueTypes.default.any,
  showMask: _vueTypes.default.bool,
  maskStyle: _vueTypes.default.object,
  className: _vueTypes.default.string,
  wrapStyle: _vueTypes.default.object,
  maskClosable: _vueTypes.default.bool,
  afterVisibleChange: _vueTypes.default.func,
  keyboard: _vueTypes.default.bool
};

var IDrawerProps = _objectSpread(_objectSpread({}, IProps), {}, {
  wrapperClassName: _vueTypes.default.string,
  forceRender: _vueTypes.default.bool,
  getContainer: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.func, _vueTypes.default.object, _vueTypes.default.bool])
});

exports.IDrawerProps = IDrawerProps;

var IDrawerChildProps = _objectSpread(_objectSpread({}, IProps), {}, {
  getContainer: _vueTypes.default.func,
  getOpenCount: _vueTypes.default.func,
  switchScrollingEffect: _vueTypes.default.func
});

exports.IDrawerChildProps = IDrawerChildProps;