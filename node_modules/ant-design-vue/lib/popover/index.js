"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = require("vue");

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _abstractTooltipProps = _interopRequireDefault(require("../tooltip/abstractTooltipProps"));

var _vueTypes = _interopRequireDefault(require("../_util/vue-types"));

var _propsUtil = require("../_util/props-util");

var _configProvider = require("../config-provider");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var props = (0, _abstractTooltipProps.default)();
var Popover = {
  name: 'APopover',
  props: _objectSpread(_objectSpread({}, props), {}, {
    prefixCls: _vueTypes.default.string,
    transitionName: _vueTypes.default.string.def('zoom-big'),
    content: _vueTypes.default.any,
    title: _vueTypes.default.any
  }),
  setup: function setup() {
    return {
      configProvider: (0, _vue.inject)('configProvider', _configProvider.ConfigConsumerProps)
    };
  },
  methods: {
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.tooltip.getPopupDomNode();
    }
  },
  render: function render() {
    var _this = this;

    var title = this.title,
        customizePrefixCls = this.prefixCls,
        $slots = this.$slots;
    var getPrefixCls = this.configProvider.getPrefixCls;
    var prefixCls = getPrefixCls('popover', customizePrefixCls);
    var props = (0, _propsUtil.getOptionProps)(this);
    delete props.title;
    delete props.content;

    var tooltipProps = _objectSpread(_objectSpread({}, props), {}, {
      prefixCls: prefixCls,
      ref: 'tooltip',
      title: (0, _vue.createVNode)("div", null, [(title || $slots.title) && (0, _vue.createVNode)("div", {
        "class": "".concat(prefixCls, "-title")
      }, [(0, _propsUtil.getComponent)(this, 'title')]), (0, _vue.createVNode)("div", {
        "class": "".concat(prefixCls, "-inner-content")
      }, [(0, _propsUtil.getComponent)(this, 'content')])])
    });

    return (0, _vue.createVNode)(_tooltip.default, tooltipProps, {
      default: function _default() {
        return [(0, _propsUtil.getSlot)(_this)];
      }
    });
  }
};
/* istanbul ignore next */

Popover.install = function (app) {
  app.component(Popover.name, Popover);
};

var _default2 = Popover;
exports.default = _default2;