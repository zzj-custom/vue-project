import { inject, createVNode } from "vue";
import PropTypes from '../_util/vue-types';
import Empty from '../empty';
import { ConfigConsumerProps } from './';
var RenderEmpty = {
  props: {
    componentName: PropTypes.string
  },
  setup: function setup(props) {
    var configProvider = inject('configProvider', ConfigConsumerProps);

    function renderHtml(componentName) {
      var getPrefixCls = configProvider.getPrefixCls;
      var prefix = getPrefixCls('empty');

      switch (componentName) {
        case 'Table':
        case 'List':
          return createVNode(Empty, {
            "image": createVNode(Empty.PRESENTED_IMAGE_SIMPLE, null, null)
          }, null);

        case 'Select':
        case 'TreeSelect':
        case 'Cascader':
        case 'Transfer':
        case 'Mentions':
          return createVNode(Empty, {
            "image": createVNode(Empty.PRESENTED_IMAGE_SIMPLE, null, null),
            "class": "".concat(prefix, "-small")
          }, null);

        default:
          return createVNode(Empty, null, null);
      }
    }

    return function () {
      return renderHtml(props.componentName);
    };
  }
};

function renderEmpty(componentName) {
  return createVNode(RenderEmpty, {
    "componentName": componentName
  }, null);
}

export default renderEmpty;