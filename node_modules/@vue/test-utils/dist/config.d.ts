import { ComponentPublicInstance } from 'vue';
import { GlobalMountOptions } from './types';
import { VueWrapper } from './vueWrapper';
interface GlobalConfigOptions {
    global: GlobalMountOptions;
    plugins: {
        VueWrapper: Pluggable;
        DOMWrapper: Pluggable;
    };
    renderStubDefaultSlot: boolean;
}
interface Plugin {
    handler: (instance: VueWrapper<ComponentPublicInstance>) => Record<string, any>;
    options: Record<string, any>;
}
declare class Pluggable {
    installedPlugins: Plugin[];
    install(handler: (instance: VueWrapper<ComponentPublicInstance>) => Record<string, any>, options?: Record<string, any>): void;
    extend(instance: VueWrapper<ComponentPublicInstance>): void;
    /** For testing */
    reset(): void;
}
export declare const config: GlobalConfigOptions;
export {};
